<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: shell | #!/slash/note]]></title>
  <link href="http://leonjza.github.io/blog/categories/shell/atom.xml" rel="self"/>
  <link href="http://leonjza.github.io/"/>
  <updated>2015-09-30T20:34:49+02:00</updated>
  <id>http://leonjza.github.io/</id>
  <author>
    <name><![CDATA[Leon Jacobs]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[a totally unnecessary composer shell]]></title>
    <link href="http://leonjza.github.io/blog/2015/09/30/a-totally-unnecessary-composer-shell/"/>
    <updated>2015-09-30T19:39:55+02:00</updated>
    <id>http://leonjza.github.io/blog/2015/09/30/a-totally-unnecessary-composer-shell</id>
    <content type="html"><![CDATA[<h2>background</h2>

<p><img class="right <a" src="href="https://i.imgur.com/9kOuWWP.png">https://i.imgur.com/9kOuWWP.png</a>"></p>

<p>A silly reverse shell invoked via the Composer Dependency Manager. <a href="https://github.com/leonjza/composer-shell">Source here</a></p>

<p><a href="https://getcomposer.org/">Composer</a>, which is most probably <em>the</em> most popular PHP dependency manager allows for <a href="https://getcomposer.org/doc/articles/scripts.md">scripts</a> to run as callbacks on based an event.
Callbacks are normally triggered just before or after certain events.</p>

<p>It is possible to provide shell commands to the <code>scripts</code> property in the required <code>composer.json</code> file (with a few restrictions), but this method echoes the command that it executes.
A slightly more covert approach would be to execute a cleverly named static function in a class included in the codebase. It has to be one that can be autoloaded by composer.</p>

<!--more-->


<h2>why?</h2>

<p>I thought a little about which scenarios this may actually be useful in and figured maybe only really strange edge cases where you can only run composer (as root lol?).
I also remembered a bug in <a href="https://community.rapid7.com/community/metasploit/blog/2015/01/01/12-days-of-haxmas-exploiting-cve-2014-9390-in-git-and-mercurial">git</a> (CVE-2014-9390) that allowed for code execution via &lsquo;poisoned&rsquo; repositories. Well, I guess depending on your perspective, this may be a very similar.</p>

<h2>PoC</h2>

<p>As part of a PoC, I just used the popular <a href="http://pentestmonkey.net/tools/web-shells/php-reverse-shell">pentest-monkey PHP reverse shell</a>, but really, anything is possible that is possible with PHP at this point.</p>

<p></p>

<script type="text/javascript" src="https://asciinema.org/a/b64qlhadvl7zn1912ihwi09wt.js" id="asciicast-b64qlhadvl7zn1912ihwi09wt" data-size="medium" async></script>


<p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Quick Win: Quickly Execute Last Shell Command]]></title>
    <link href="http://leonjza.github.io/blog/2013/06/23/quick-win-quickly-execute-last-shell-command/"/>
    <updated>2013-06-23T10:42:00+02:00</updated>
    <id>http://leonjza.github.io/blog/2013/06/23/quick-win-quickly-execute-last-shell-command</id>
    <content type="html"><![CDATA[<h3>Work clever, not hard</h3>

<p>This will be the first post of a series of quick shell tips for getting things done, fast. Infact, it will probably just serve as a notepad for me on the topic ;)</p>

<h3>Last shell command</h3>

<p>If you are using a shell, such as <a href="http://www.gnu.org/software/bash/bash.html">Bash</a>, which is pretty much the default on most Linux distributions, then you probably know that you can just use the <strong>up</strong> arrow to get the last command. But, if you are using a shell such as <a href="http://www.zsh.org/">Zsh</a> like me, you&rsquo;d quickly come to realise that the global <code>~/.histfile</code> can be a tad frustrating if you are expecting the last command you typed in <strong>that</strong> terminal window to appear when you press <strong>up</strong>. Only to realise, its literally the last command you typed in <em>another</em> shell.</p>

<h3>Bang Bang to the rescue!</h3>

<p>Simply type <code>!!</code> and <em>enter</em> and the last command that was run in <strong>that</strong> terminal will be either echoed or executed, depending on how your shell is configured to handle the command.</p>
]]></content>
  </entry>
  
</feed>
